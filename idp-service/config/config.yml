mongo:
  uri: mongodb://localhost:27017/idp-harness
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  socketTimeout: 360000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  indexManagerMode: AUTO
  transactionsEnabled: false
  aliasDBName: idp-harness
  traceMode: DISABLED
  maxOperationTimeInMillis: 300000

server:
  applicationConnectors:
    - type: http
      port: 12003
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: http
      port: 12004
  requestLog:
    appenders: []
  maxThreads: 1024

eventsFramework:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ""
  password: ""

pmsSdkGrpcServerConfig:
  connectors:
    - port: 12501
      secure: true
      keyFilePath: key.pem
      certFilePath: cert.pem
    - port: 12502

pmsGrpcClientConfig:
  target: localhost:12011
  authority: localhost

shouldConfigureWithPMS: ${SHOULD_CONFIGURE_WITH_PMS:-false}

cacheConfig:
  cacheBackend: REDIS
  cacheNamespace: ""
  disabledCaches: [ ]
  enterpriseCacheEnabled: true

logging:
  level: INFO
  loggers:
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

distributedLockImplementation: REDIS

logStreamingServiceConfig:
  baseUrl: http://localhost:8079
  serviceToken: token

ngManagerServiceHttpClientConfig:
  baseUrl: http://localhost:7457/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

managerClientConfig:
  baseUrl: http://localhost:3457/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

backstageHttpClientConfig:
  baseUrl: http://localhost:7007/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

ngManagerServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
managerServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
backstageServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
idpServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
jwtAuthSecret: dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq
jwtIdentityServiceSecret: HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU=
idpEncryptionSecret: q7YdsdUoXTit5nqdBR1LdKQXE3beIGE6yiseIPM1WKg_iFE5C4oRxi1_Ao6XcKZvhCbtgZQliOkUO1cu
pipelineServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
jwtExternalServiceSecret: nhUmut2NMcUnsR01OgOz0e51MZ51AqUwrOATJ3fJ

managerTarget: localhost:9880
managerAuthority: localhost

onboardingModuleConfig:
  descriptionForEntitySelected: A YAML file will be created for each service inside your Git repository. An example of what the files will look like is shown below
  descriptionForSampleEntity: Because you didn't choose any Harness services to import in the previous step, an example Harness service catalog-info.yaml will be created inside your Git repository as shown below
  useGitServiceGrpcForSingleEntityPush: true
  tmpPathForCatalogInfoYamlStore: /tmp/idp-catalog-onboarding
  catalogInfoLocationDefaultPath: /.harness-idp-entities
  harnessCiCdAnnotations:
    projectUrl: https://localhost:8181/ng/account/accountIdentifier/home/orgs/orgIdentifier/projects/projectIdentifier/details
    serviceUrl: https://localhost:8181/ng/account/accountIdentifier/cd/orgs/orgIdentifier/projects/projectIdentifier/services/serviceIdentifier

gitManagerGrpcClientConfig:
  target: localhost:13001
  authority: localhost

accessControlClient:
  enableAccessControl: false
  accessControlServiceConfig:
    baseUrl: http://localhost:9006/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  accessControlServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

backstageSaToken: ""
backstageSaCaCrt: ""
backstageMasterUrl: ""
backstagePodLabel: ""
backstageEntitiesFetchLimit: 1000

provisionModuleConfig:
  triggerPipelineUrl: ""

env: "local"
prEnvDefaultBackstageNamespace: ""

backstageAppBaseUrl: https://localhost:3000
backstagePostgresHost: ""

delegateSelectorsCacheMode: redis # in-memory or redis

proxyAllowList:
  services:
    manager:
      proxyPath: v1/idp-proxy-service/manager
      clientConfig:
        baseUrl: http://localhost:3457/api/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
      allowList:
        - /users/validate-support-user
    ng-manager:
      proxyPath: v1/idp-proxy-service/ng-manager
      clientConfig:
        baseUrl: http://localhost:7457/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
      allowList:
        - /user/aggregate
        - /aggregate/acl/usergroups
        - /token/validate

shouldConfigureWithNotification: ${SHOULD_CONFIGURE_WITH_NOTIFICATION:-false}

notificationClient:
  messageBroker:
    type: MONGO
    uri: mongodb://localhost:27017/notification
    connectTimeout: 30000
    serverSelectionTimeout: 90000
    socketTimeout: 360000
    maxConnectionIdleTime: 600000
    connectionsPerHost: 300
  httpClient:
    baseUrl: http://localhost:9005/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  secrets:
    notificationClientSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

notificationConfigs:
  pluginRequestsNotificationSlack: https://hooks.slack.com/services/dummy/dummy/dummy

pipelineServiceClientConfig:
  baseUrl: http://localhost:12001/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

scorecardScoreComputationIteratorConfig:
  threadPoolCount: 5
  enabled: false
  targetIntervalInSeconds: 43200 #12 hours in seconds

tiServiceConfig:
  internalUrl: ""
  baseUrl: http://localhost:8078
  globalToken: "78d16b66-4b4c-11eb-8377-acde48001122"

cpu: 2
scoreComputerThreadsPerCore: 2

streamPerServiceConfiguration: ${PIE_STREAM_PER_SERVICE:- false}

auditClientConfig:
  baseUrl: http://localhost:9005/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

enableAudit: false

internalAccounts:
  - kmpySmUISimoRrJL6NL73w

segmentConfiguration:
  enabled: false
  url: "segment_url_place_holder"
  apiKey: "segment_api_key"
  certValidationRequired: false

logServiceConfig:
  baseUrl: http://localhost:8079
  globalToken: "c76e567a-b341-404d-a8dd-d9738714eb82"


sscaServiceConfig:
  httpClientConfig:
    baseUrl: http://localhost:8186
    connectTimeOutSeconds: 40
    readTimeOutSeconds: 40
  serviceSecret: secret

stoServiceConfig:
  baseUrl: http://localhost:8078
  globalToken: "78d16b66-4b4c-11eb-8377-acde48001122"

apiUrl: https://localhost:8181/#/

scmConnectionConfig:
  url: localhost:8091

pmsSdkExecutionPoolConfig:
  corePoolSize: ${PMS_SDK_EXECUTION_POOL_CORE_SIZE:-50}
  maxPoolSize: ${PMS_SDK_EXECUTION_POOL_MAX_SIZE:-300}
  idleTime: ${PMS_SDK_EXECUTION_POOL_IDLE_TIME:-120}
  timeUnit: ${PMS_SDK_EXECUTION_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pmsSdkOrchestrationEventPoolConfig:
  corePoolSize: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_CORE_SIZE:-50}
  maxPoolSize: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_MAX_SIZE:-300}
  idleTime: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_IDLE_TIME:-120}
  timeUnit: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pmsPlanCreatorServicePoolConfig:
  corePoolSize: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_CORE_SIZE:-2}
  maxPoolSize: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_MAX_SIZE:-3}
  idleTime: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

opaClientConfig:
  baseUrl: http://localhost:3000
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

policyManagerSecret: secret

ciExecutionServiceConfig:
  miningPatternConfig:
    gcsCreds: null
    projectId: null
    bucketName: null
  queueServiceClientConfig:
    httpClientConfig:
      baseUrl: http://localhost:9091/
      connectTimeOutSeconds: 15
      readTimeOutSeconds: 15
    queueServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
    envNamespace: ${EVENTS_FRAMEWORK_ENV_NAMESPACE:-localhost}
  addonImageTag: v1.4-alpha
  liteEngineImageTag: v1.4-alpha
  defaultMemoryLimit: 200
  defaultCPULimit: 200
  defaultInternalImageConnector: "account.harnessimage"
  executionLimits:
    free:
      defaultTotalExecutionCount: 20
      defaultMacExecutionCount: 5
    team:
      defaultTotalExecutionCount: 50
      defaultMacExecutionCount: 10
    enterprise:
      defaultTotalExecutionCount: 100
      defaultMacExecutionCount: 10
    overrideConfig:
      - "kmpySmUISimoRrJL6NL73w:1:1"
  pvcDefaultStorageSize: 25600
  delegateServiceEndpointVariableValue: "delegate-service:8080"
  addonImage: harness/ci-addon:1.16.3
  liteEngineImage: harness/ci-lite-engine:1.16.3
  isLocal: false
  hostedVmConfig:
    splitLinuxAmd64Pool: false
    splitLinuxArm64Pool: false
    splitWindowsAmd64Pool: false
  stepConfig:
    # The below config is for K8 steps
    gitCloneConfig:
      # Use rootless image only for K8 git clone
      image: harness/drone-git:1.2.7-rootless
      entrypoint:
        - /usr/local/bin/clone
      windowsEntrypoint:
        - "pwsh"
        - "C:\\bin\\clone.ps1"
    buildAndPushDockerRegistryConfig:
      image: plugins/kaniko:1.7.0
      entrypoint:
        - /kaniko/kaniko-docker
    buildAndPushECRConfig:
      image: plugins/kaniko-ecr:1.7.0
      entrypoint:
        - /kaniko/kaniko-ecr
    buildAndPushGCRConfig:
      image: plugins/kaniko-gcr:1.7.0
      entrypoint:
        - /kaniko/kaniko-gcr
    buildAndPushACRConfig:
      image: plugins/kaniko-acr:1.7.0
      entrypoint:
        - /kaniko/kaniko-acr
    gcsUploadConfig:
      image: plugins/gcs:1.3.0
      entrypoint:
        - /bin/drone-gcs
      windowsEntrypoint:
        - "C:\\drone-gcs.exe"
    s3UploadConfig:
      image: plugins/s3:1.2.0
      entrypoint:
        - /bin/drone-s3
      windowsEntrypoint:
        - "C:\\drone-s3.exe"
    securityConfig:
      image: harness/sto-plugin:dev
      entrypoint:
        - /bin/sh
        - -c
        - python3 ${DOCKER_ENTRYPOINT}
    artifactoryUploadConfig:
      image: plugins/artifactory:1.2.0
      entrypoint:
        - /bin/plugin
      windowsEntrypoint:
        - "C:\\bin\\drone-artifactory.exe"
    cacheGCSConfig:
      image: plugins/cache:1.4.6
      entrypoint:
        - /bin/drone-cache
      windowsEntrypoint:
        - "C:\\drone-cache.exe"
    cacheS3Config:
      image: plugins/cache:1.4.6
      entrypoint:
        - /bin/drone-cache
      windowsEntrypoint:
        - "C:\\drone-cache.exe"
    iacmTerraform:
      image: plugins/harness_terraform:dev
      entrypoint:
        - /bin/harness-terraform
      windowsEntrypoint:
        - "C:\\harness-terraform.exe"
    idpCookieCutter:
      image: deveshharness2306/cookiecutter:latest
    vmImageConfig:
      # Use root image for VM git clone
      gitClone: harness/drone-git:1.2.7
      buildAndPushDockerRegistry: plugins/docker:20.13.0
      buildAndPushACR: plugins/acr:20.13.0
      buildAndPushECR: plugins/ecr:20.13.0
      buildAndPushGCR: plugins/gcr:20.13.0
      gcsUpload: plugins/gcs:1.3.0
      s3Upload: plugins/s3:1.2.0
      security: harness/sto-plugin:dev
      artifactoryUpload: plugins/artifactory:1.2.0
      cacheGCS: plugins/cache:1.4.6
      cacheS3: plugins/cache:1.4.6
      iacmTerraform: plugins/harness_terraform:dev
      idpCookieCutter: deveshharness2306/cookiecutter:latest


iacmServiceConfig:
  baseUrl: http://localhost:8080
  externalUrl: http://localhost:8080
  globalToken: "551715ea-ca71-11ec-9d64-0242ac120002"

enforcementClientConfiguration:
  enforcementCheckEnabled: false

harnessCodeGitUrl: ${HARNESS_CODE_GIT_URL:- http://localhost:3000/git}
