# Default values for harness-ui
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  commonAnnotations: {}
  commonLabels: {}
  kubeVersion: ""
  ha: false
  loadbalancerURL: ""
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""  
    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
      secretName: "redis-secret"
      userKey: "redis-user"
      passwordKey: "redis-password"
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD": ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD":
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      # --  provide default values if mongo.installed is set to false
      hosts:
        - timescaledb-single-chart:5432
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
      secretName: "redis-secret"
      userKey: "redis-user"
      passwordKey: "redis-password"
      extraArgs: ""
  airgap: false
  imagePullSecrets: []
  ingress:
    hosts:
      - "*"
    enabled: false
    objects:
      annotations: {}
    className: harness
    tls:
      enabled: false
      secretName: harness-cert
    additionalPaths:
      # - path: abc
      #   pathType: ImplementationSpecific
      #     backend:
      #         service:
      #           name: release-name-harness-ui
      #           port:
      #             number: 80
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:
replicaCount: 1
maxSurge: 1
maxUnavailable: 0

image:
  registry: docker.io
  repository: harness/verification-service-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "80209"
  digest: ""
  imagePullSecrets: []

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []

mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

mongo:
  protocol: "mongodb"
  hosts: []
  secretName: ""
  userKey: ""
  passwordKey: ""
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          MONGO_USER: ""
          MONGO_PASSWORD": ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            MONGO_USER:
              name: ""
              property: ""
            MONGO_PASSWORD":
              name: ""
              property: ""  

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  # runAsUser: 999
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7070
  annotations: {}

resources:
  limits:
    cpu: 500m
    memory: 3000Mi
  requests:
    cpu: 500m
    memory: 3000Mi

ingress:
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /verification
          pathType: ImplementationSpecific
  tls: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}
# -- appLogInfo can be INFO DEBUG WARN ERROR
appLogInfo: INFO
# -- Specify Java memory to be used
java:
  memory: 2048

additionalConfigs: {}

java17flags: ""

virtualService:
  annotations: {}
ingress:
  annotations: {}

# application level secret
secrets:
  default:
    VERIFICATION_SERVICE_SECRET: NTlNUjVSbFZBUmNkSDd6YjdwTng2R3pxaWdsQm1YUjgK
  kubernetesSecrets:
    - secretName: ""
      keys:
        VERIFICATION_SERVICE_SECRET: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          VERIFICATION_SERVICE_SECRET:
            name: ""
            property: ""