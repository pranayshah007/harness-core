# Default values for harness-manager
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  # -- High availability: deploy 3 mongodb pods instead of 1. Not recommended for evaluation or POV
  ha: false
  commonAnnotations: {}
  commonLabels: {}
  kubeVersion: ""
  loadbalancerURL: ""
  stackDriverLoggingEnabled: false
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      hosts:
        - timescaledb-single-chart:5432
      # -- Enable TimescaleDB SSL
      sslEnabled: false
      # -- TimescaleDB secrets
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      certName: ""
      certKey: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              TIMESCALEDB_USERNAME: ""
              TIMESCALEDB_PASSWORD: ""
              TIMESCALEDB_SSL_ROOT_CERT: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                TIMESCALEDB_USERNAME:
                  name: ""
                  property: ""
                TIMESCALEDB_PASSWORD:
                  name: ""
                  property: ""
                TIMESCALEDB_SSL_ROOT_CERT:
                  name: ""
                  property: ""

    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
  mongoSSL: false
  license:
    cg: ''
    ng: ''
    secrets:
      kubernetesSecrets:
        - secretName: ""
          keys:
            CG_LICENSE: ""
            NG_LICENSE: ""
      secretManagement: 
        externalSecretsOperator:
          - secretStore:
              name: ""
              kind: ""
            remoteKeys:
              CG_LICENSE:
                name: ""
                property: ""
              NG_LICENSE:
                name: ""
                property: ""
  cd:
    enabled: false
  ci:
    enabled: false
  sto:
    enabled: false
  srm:
    enabled: false
  ngcustomdashboard:
    enabled: false
  ff:
    enabled: false
  ccm:
    enabled: false
  saml:
    autoaccept: false
  gitops:
    enabled: false
  opa:
    enabled: false
  ng:
    enabled: true
  cg:
    enabled: false
  chaos:
    enabled: false
  cet:
    enabled: false
  useImmutableDelegate: "true"
  useMinimalDelegateImage: false
  smtpCreateSecret:
    enabled: false
    SMTP_PASSWORD: ""
    SMTP_HOST: ""
    SMTP_USERNAME: ""
    SMTP_USE_SSL: "true"
    SMTP_PORT: "465"
    secrets:
      kubernetesSecrets:
        - secretName: ""
          keys:
            SMTP_USERNAME: ""
            SMTP_PASSWORD: ""
            SMTP_HOST: ""
            SMTP_PORT: ""
            SMTP_USE_SSL: ""
      secretManagement: 
        externalSecretsOperator:
          - secretStore:
              name: ""
              kind: ""
            remoteKeys:
              SMTP_USERNAME:
                name: ""
                property: ""
              SMTP_PASSWORD:
                name: ""
                property: ""
              SMTP_HOST:
                name: ""
                property: ""
              SMTP_PORT:
                name: ""
                property: ""
              SMTP_USE_SSL:
                name: ""
                property: ""
  ingress:
    # -- create ingress objects
    enabled: false
    # -- set ingress object classname
    className: harness
    # -- set host of ingressObjects
    hosts:
      - my-host.example.org
    # -- set tls for ingress objects
    tls:
      enabled: true
      secretName: ''
    # -- add annotations to ingress objects
    objects:
      annotations: {}
  istio:
    # -- create virtualServices objects
    enabled: false
    # -- create gateway and use in virtualservice
    gateway:
      create: false
    # -- if gateway not created, use specified gateway and host
    virtualService:
      gateways:
      hosts:
  proxy:
    enabled: false
    host: localhost
    port: 80
    username: ""
    password: ""
    protocol: http
  awsServiceEndpointUrls:
    enabled: false
    endPointRegion: us-east-2
    stsEndPointUrl: https://sts.us-east-2.amazonaws.com
    ecsEndPointUrl: https://ecs.us-east-2.amazonaws.com
    cloudwatchEndPointUrl: https://monitoring.us-east-2.amazonaws.com

redis:
  protocol: ""
  hosts: []
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
    secretManagement: 
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            REDIS_USERNAME:
              name: ""
              property: ""
            REDIS_PASSWORD:
              name: ""
              property: ""

timescaledb:
  enabled: false
  # -- TimescaleDB host names
  hosts: []
  # -- Enable TimescaleDB SSL
  sslEnabled: false
  # -- TimescaleDB secrets
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          TIMESCALEDB_USERNAME: ""
          TIMESCALEDB_PASSWORD: ""
          TIMESCALEDB_SSL_ROOT_CERT: ""
    secretManagement: 
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            TIMESCALEDB_USERNAME:
              name: ""
              property: ""
            TIMESCALEDB_PASSWORD:
              name: ""
              property: ""
            TIMESCALEDB_SSL_ROOT_CERT:
              name: ""
              property: ""
database:
  mongo:
    dmsharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    notifications:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    harness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""

replicaCount: 1
maxSurge: 1
maxUnavailable: 0

allowedOrigins: ""

image:
  registry: docker.io
  repository: harness/manager-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "80212"
  digest: ""
  imagePullSecrets: []

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []

initContainer:
  image:
    registry: docker.io
    repository: busybox
    pullPolicy: IfNotPresent
    tag: latest
    digest: ""

mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword

version: 1.0.80209

delegate_docker_image:
  image:
    registry: docker.io
    repository: harness/delegate
    tag: latest
    digest: ""


immutable_delegate_docker_image:
  image:
    registry: docker.io
    repository: harness/delegate
    tag: 23.08.80104
    digest: ""

upgrader_docker_image:
  image:
    registry: docker.io
    repository: harness/upgrader
    tag: latest
    digest: ""

appLogLevel: INFO

redisConfig:
  nettyThreads: "32"

java:
  memory: "2048"

external_graphql_rate_limit: "500"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true

service:
  annotations: {}
  type: ClusterIP
  port: 9090
  grpcport: 9879

resources:
  limits:
    memory: 8192Mi
  requests:
    cpu: 2
    memory: 3000Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}

### These flags are used by the helper function to create the FEATURES config value based off the global.<feature>.enabled boolean
# -- Feature Flags
featureFlags:
  # -- Base flags for all modules
  Base: "ASYNC_ARTIFACT_COLLECTION,JIRA_INTEGRATION,AUDIT_TRAIL_UI,GDS_TIME_SERIES_SAVE_PER_MINUTE,STACKDRIVER_SERVICEGUARD,TIME_SERIES_SERVICEGUARD_V2,TIME_SERIES_WORKFLOW_V2,CUSTOM_DASHBOARD,GRAPHQL,CV_FEEDBACKS,LOGS_V2_247,UPGRADE_JRE,LOG_STREAMING_INTEGRATION,NG_HARNESS_APPROVAL,GIT_SYNC_NG,NG_CG_TASK_ASSIGNMENT_ISOLATION,CI_OVERVIEW_PAGE,AZURE_CLOUD_PROVIDER_VALIDATION_ON_DELEGATE,TERRAFORM_AWS_CP_AUTHENTICATION,NG_TEMPLATES,NEW_DEPLOYMENT_FREEZE,HELM_CHART_AS_ARTIFACT,RESOLVE_DEPLOYMENT_TAGS_BEFORE_EXECUTION,WEBHOOK_TRIGGER_AUTHORIZATION,GITHUB_WEBHOOK_AUTHENTICATION,CUSTOM_MANIFEST,GIT_ACCOUNT_SUPPORT,AZURE_WEBAPP,POLLING_INTERVAL_CONFIGURABLE,APPLICATION_DROPDOWN_MULTISELECT,RESOURCE_CONSTRAINT_SCOPE_PIPELINE_ENABLED,NG_TEMPLATE_GITX,ELK_HEALTH_SOURCE,CVNG_METRIC_THRESHOLD,SRM_HOST_SAMPLING_ENABLE,SRM_ENABLE_HEALTHSOURCE_CLOUDWATCH_METRICS,CDS_SHELL_VARIABLES_EXPORT,CDS_TAS_NG,CD_TRIGGER_V2,CDS_NG_TRIGGER_MULTI_ARTIFACTS,ENABLE_DEFAULT_NG_EXPERIENCE_FOR_ONPREM,NEXT_GEN_ENABLED,NEW_LEFT_NAVBAR_SETTINGS,ACCOUNT_BASIC_ROLE,PL_ENABLE_BASIC_ROLE_FOR_PROJECTS_ORGS,CD_NG_DOCKER_ARTIFACT_DIGEST,CDS_SERVICE_OVERRIDES_2_0,NG_SVC_ENV_REDESIGN,NG_EXECUTION_INPUT,CDS_SERVICENOW_REFRESH_TOKEN_AUTH,SERVICE_DASHBOARD_V2,CDS_OrgAccountLevelServiceEnvEnvGroup,CDC_SERVICE_DASHBOARD_REVAMP_NG,PL_FORCE_DELETE_CONNECTOR_SECRET,POST_PROD_ROLLBACK,PIE_STATIC_YAML_SCHEMA,ENABLE_DEFAULT_NG_EXPERIENCE_FOR_ONPREM,NEXT_GEN_ENABLED,NEW_LEFT_NAVBAR_SETTINGS,SPG_SIDENAV_COLLAPSE,ACCOUNT_BASIC_ROLE,CI_LE_STATUS_REST_ENABLED,HOSTED_BUILDS,CIE_HOSTED_VMS,ENABLE_K8_BUILDS,CI_DISABLE_RESOURCE_OPTIMIZATION,CI_OUTPUT_VARIABLES_AS_ENV,CODE_ENABLED,CDS_GITHUB_APP_AUTHENTICATION,CD_NG_DOCKER_ARTIFACT_DIGEST,CDS_SERVICE_OVERRIDES_2_0,NG_SVC_ENV_REDESIGN,NG_EXECUTION_INPUT,CDS_SERVICENOW_REFRESH_TOKEN_AUTH,SERVICE_DASHBOARD_V2,CDS_OrgAccountLevelServiceEnvEnvGroup,CDC_SERVICE_DASHBOARD_REVAMP_NG,CDS_GITHUB_APP_AUTHENTICATION,PL_FAVORITES,USE_NEW_NODE_ENTITY_CONFIGURATION,PIE_EXPRESSION_CONCATENATION,CDS_HELM_STEADY_STATE_CHECK_1_16_V2_NG,CDS_REMOVE_TIME_BUCKET_GAPFILL_QUERY"
  # -- NG Specific Feature Flags
  NG: "ENABLE_DEFAULT_NG_EXPERIENCE_FOR_ONPREM,NEXT_GEN_ENABLED,NEW_LEFT_NAVBAR_SETTINGS,SPG_SIDENAV_COLLAPSE,PL_ENABLE_JIT_USER_PROVISION,CDS_NAV_2_0"
  # -- STO Feature Flags
  CD: "CDS_AUTO_APPROVAL,CDS_NG_TRIGGER_SELECTIVE_STAGE_EXECUTION"
  # -- STO Feature Flags
  CI: "CING_ENABLED,CI_INDIRECT_LOG_UPLOAD,CI_LE_STATUS_REST_ENABLED"
  # -- STO Feature Flags
  STO: "STO_STEP_PALETTE_BURP_ENTERPRISE,STO_STEP_PALETTE_CODEQL,STO_STEP_PALETTE_FOSSA,STO_STEP_PALETTE_GIT_LEAKS,STO_STEP_PALETTE_SEMGREP,STO_STEP_PALETTE_SYSDIG,STO_STEP_PALETTE_ANCHORE_ENTERPRISE"
  # -- SRM Flags
  SRM: "CVNG_ENABLED"
  # -- Custom Dashboard Flags
  CDB: "NG_DASHBOARDS"
  # -- AutoAccept Feature Flags
  SAMLAutoAccept: "AUTO_ACCEPT_SAML_ACCOUNT_INVITES,PL_NO_EMAIL_FOR_SAML_ACCOUNT_INVITES"
  # -- FF Feature Flags
  FF: "CFNG_ENABLED"
  # -- CCM Feature Flags
  CCM: "CENG_ENABLED,CCM_MICRO_FRONTEND,NODE_RECOMMENDATION_AGGREGATE"
  # -- GitOps Feature Flags
  GitOps: "CUSTOM_ARTIFACT_NG,SERVICE_DASHBOARD_V2,OPTIMIZED_GIT_FETCH_FILES,MULTI_SERVICE_INFRA,ENV_GROUP,NG_SVC_ENV_REDESIGN"
  # -- Licensing flags
  LICENSE: "NG_LICENSES_ENABLED,VIEW_USAGE_ENABLED"
  # -- OPA
  OPA: "OPA_PIPELINE_GOVERNANCE,OPA_GIT_GOVERNANCE"
  # -- CHAOS Feature Flags
  CHAOS: "CHAOS_ENABLED"
  # -- CET Feature Flags
  CET: "SRM_CODE_ERROR_NOTIFICATIONS,SRM_ET_RESOLVED_EVENTS,SRM_ET_CRITICAL_EVENTS"
  # -- Additional Feature Flag
  ADDITIONAL: ""

additionalConfigs: {}

java17flags: ""

# extraVolumes:
  # - name: volume-test
  #   configMap:
  #     name: test-config
  #     readOnly: true
extraVolumes: []

# extraVolumeMounts:
#   - name: test-volume-mount
#     mountPath: /opt/harness/config
extraVolumeMounts: []

# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command:

lifecycleHooks:
  preStop:
    exec:
      command:
        - touch
        - shutdown

# extraEnvVars:
# - name: POD_NAME
#   valueFrom:
#     fieldRef:
#       fieldPath: metadata.name
extraEnvVars: []

virtualService:
  annotations: {}
ingress:
  annotations: {}

secrets:
  default:
    LOG_STREAMING_SERVICE_TOKEN: "c76e567a-b341-404d-a8dd-d9738714eb82"
    VERIFICATION_SERVICE_SECRET: "59MR5RlVARcdH7zb7pNx6GzqiglBmXR8"
  kubernetesSecrets:
  - secretName: ""
    keys:
      LOG_STREAMING_SERVICE_TOKEN: ""
      VERIFICATION_SERVICE_SECRET: ""
  secretManagement: 
    externalSecretsOperator:
    - secretStore:
        name: ""
        kind: ""
      remoteKeys:
        LOG_STREAMING_SERVICE_TOKEN:
          name: ""
          property: ""
        VERIFICATION_SERVICE_SECRET:
          name: ""
          property: "" 
