global:
  license:
    cg: ''
    ng: ''
    secrets:
      kubernetesSecrets:
        - secretName: ""
          keys:
            CG_LICENSE: ""
            NG_LICENSE: ""
      secretManagement: 
        externalSecretsOperator:
          - secretStore:
              name: ""
              kind: ""
            remoteKeys:
              CG_LICENSE:
                name: ""
                property: ""
              NG_LICENSE:
                name: ""
                property: ""
  database:
    minio:
      installed: true
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              S3_USER: ""
              S3_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                S3_USER:
                  name: ""
                  property: ""
                S3_PASSWORD:
                  name: ""
                  property: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
              MONGO_REPLICA_SET_KEY: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
                MONGO_REPLICA_SET_KEY:
                  name: ""
                  property: ""
    postgres:
      installed: true
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              POSTGRES_USER: ""
              POSTGRES_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                POSTGRES_USER:
                  name: ""
                  property: ""
                POSTGRES_PASSWORD:
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: ""
      hosts: []
      # -- Enable TimescaleDB SSL
      sslEnabled: false
      # -- TimescaleDB secrets
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      certName: ""
      certKey: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              TIMESCALEDB_USERNAME: ""
              TIMESCALEDB_PASSWORD: ""
              TIMESCALEDB_SSL_ROOT_CERT: ""
              TIMESCALEDB_REPLICATION_PASSWORD: ""
              TIMESCALEDB_ADMIN_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                TIMESCALEDB_USERNAME:
                  name: ""
                  property: ""
                TIMESCALEDB_PASSWORD:
                  name: ""
                  property: ""
                TIMESCALEDB_SSL_ROOT_CERT:
                  name: ""
                  property: ""
                TIMESCALEDB_REPLICATION_PASSWORD:
                  name: ""
                  property: ""
                TIMESCALEDB_ADMIN_PASSWORD:
                  name: ""
                  property: ""
    redis:
      installed: true
      protocol: ""
      # --  provide default values if redis.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
    clickhouse:
      enabled: false
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              CLICKHOUSE_USERNAME: ""
              CLICKHOUSE_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                CLICKHOUSE_USERNAME:
                  name: ""
                  property: ""
                CLICKHOUSE_PASSWORD:
                  name: ""
                  property: ""
  smtpCreateSecret:
    enabled: false
    SMTP_PASSWORD: ""
    SMTP_HOST: ""
    SMTP_USERNAME: ""
    SMTP_USE_SSL: ""
    SMTP_PORT: ""
    secrets:
      kubernetesSecrets:
        - secretName: ""
          keys:
            SMTP_USERNAME: ""
            SMTP_PASSWORD: ""
            SMTP_HOST: ""
            SMTP_PORT: ""
            SMTP_USE_SSL: ""
      secretManagement: 
        externalSecretsOperator:
          - secretStore:
              name: ""
              kind: ""
            remoteKeys:
              SMTP_USERNAME:
                name: ""
                property: ""
              SMTP_PASSWORD:
                name: ""
                property: ""
              SMTP_HOST:
                name: ""
                property: ""
              SMTP_PORT:
                name: ""
                property: ""
              SMTP_USE_SSL:
                name: ""
                property: ""
  ngcustomdashboard:
    enabled: true

mongodb:
  password: ""

timescaledb:
  adminPassword: ""
  postgresPassword: ""
  standbyPassword: ""

postgresdb:
  adminPassword: ""

sto:
  appHarnessToken: ""
  AppAuditJWTSecret: ""

minio:
  rootUser: "admin"
  rootPassword: ""

mongo:
  replicaSetKey: ""
  rootPassword: ""

postgres:
  postgresPassword: ""

clickhouse:
  adminPassword: ""
