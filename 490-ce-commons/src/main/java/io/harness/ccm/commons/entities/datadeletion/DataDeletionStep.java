/*
 * Copyright 2023 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.
 */

package io.harness.ccm.commons.entities.datadeletion;

import static io.harness.ccm.commons.entities.datadeletion.DataDeletionBucket.AWS_DELETION;
import static io.harness.ccm.commons.entities.datadeletion.DataDeletionBucket.AZURE_DELETION;
import static io.harness.ccm.commons.entities.datadeletion.DataDeletionBucket.DKRON_DELETION;
import static io.harness.ccm.commons.entities.datadeletion.DataDeletionBucket.GCP_DELETION;
import static io.harness.ccm.commons.entities.datadeletion.DataDeletionBucket.MONGO_EVENTS_DB_DELETION;
import static io.harness.ccm.commons.entities.datadeletion.DataDeletionBucket.TIMESCALE_DB_DELETION;

import static java.util.Collections.emptyList;

import io.harness.annotations.dev.HarnessTeam;
import io.harness.annotations.dev.OwnedBy;

import java.util.List;
import lombok.Getter;

@Getter
@OwnedBy(HarnessTeam.CE)
public enum DataDeletionStep {
  // AWS Deletions
  AWS_S3_DIRECTORIES(emptyList(), AWS_DELETION),

  // Azure Deletions
  AZURE_STORAGE(emptyList(), AZURE_DELETION),

  // GCP Deletions
  GCP_BQ_TRANSFER_JOBS(emptyList(), GCP_DELETION),
  GCP_BQ_DATASET(List.of(GCP_BQ_TRANSFER_JOBS), GCP_DELETION),
  GCP_BQ_CE_INTERNAL_COST_AGGREGATED(emptyList(), GCP_DELETION),
  GCP_BQ_CE_INTERNAL_GCP_CONNECTOR_INFO(emptyList(), GCP_DELETION),
  GCP_BQ_CE_INTERNAL_CURRENCY_CONVERSION_FACTOR_DEFAULT(emptyList(), GCP_DELETION),
  GCP_BQ_CE_INTERNAL_MSP_MARKUP(emptyList(), GCP_DELETION),
  GCP_BQ_HARNESS_AWS_TRUTH_TABLE(emptyList(), GCP_DELETION),
  GCP_GCS_BUCKET(List.of(GCP_BQ_TRANSFER_JOBS), GCP_DELETION),
  GCP_SCHEDULER_JOBS(emptyList(), GCP_DELETION), // TODO: Not done yet
  GCP_SERVICE_ACCOUNTS(List.of(GCP_BQ_TRANSFER_JOBS), GCP_DELETION),

  // Dkron deletion
  DKRON_GOVERNANCE_RULE_EXECUTION_JOBS(emptyList(), DKRON_DELETION),

  // Mongo Events DB Deletions
  MONGO_EVENTS_DB_ACCOUNT_SHARD_MAPPING(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_AWS_ENTITY_TO_BUCKET_MAPPING(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_AZURE_RECOMMENDATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_BATCH_JOB_SCHEDULED_DATA(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_BILLING_DATA_PIPELINE_RECORD(List.of(GCP_BQ_DATASET), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_BUDGET_GROUPS(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_BUDGETS(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_BUSINESS_MAPPING(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_BUSINESS_MAPPING_HISTORY(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_CLOUD_ACCOUNT(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_CLUSTER(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_DATA_CLEANUP_REQUEST(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_EXCEPTION_RECORD(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_METADATA_RECORD(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_REPORT_SCHEDULE(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_VIEW(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CE_VIEW_FOLDER(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CLOUD_BILLING_TRANSFER_RUNS(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_CLUSTER_RECORDS(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_DATA_GENERATED_NOTIFICATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_EC2_RECOMMENDATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_ECS_PARTIAL_RECOMMENDATION_HISTOGRAM(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_ECS_SERVICE(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_ECS_SERVICE_RECOMMENDATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_FILTERS(emptyList(), MONGO_EVENTS_DB_DELETION), // TODO: Not done yet
  MONGO_EVENTS_DB_GCP_SERVICE_ACCOUNT(List.of(GCP_SERVICE_ACCOUNTS), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_GOVERNANCE_RECOMMENDATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_GOVERNANCE_RULE(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_GOVERNANCE_RULE_ENFORCEMENT(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_GOVERNANCE_RULE_EXECUTION(List.of(DKRON_GOVERNANCE_RULE_EXECUTION_JOBS), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_GOVERNANCE_RULE_SET(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_INSTANCE_DATA(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_K8S_NODE_RECOMMENDATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_K8S_WORKLOAD(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_K8S_WORKLOAD_RECOMMENDATION(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_K8S_YAML(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_LAST_RECEIVED_PUBLISHED_MESSAGE(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_LATEST_CLUSTER_INFO(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_NOTIFICATION_SETTING(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_OUTBOX_EVENTS(emptyList(), MONGO_EVENTS_DB_DELETION), // TODO: @Entity(value = "outboxEvents")
  MONGO_EVENTS_DB_PARTIAL_RECOMMENDATION_HISTOGRAM(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_PRICING_PROFILE(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_PUBLISHED_MESSAGES(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_RECOMMENDATIONS_IGNORE_LIST(emptyList(), MONGO_EVENTS_DB_DELETION),
  MONGO_EVENTS_DB_VIEW_CUSTOM_FIELD(emptyList(), MONGO_EVENTS_DB_DELETION),

  // Timescale deletion
  TIMESCALE_ACTIVE_POD_COUNT(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_ANOMALIES(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_BILLING_DATA(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_BILLING_DATA_AGGREGATED(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_BILLING_DATA_HOURLY(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_BILLING_DATA_HOURLY_AGGREGATED(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_BUDGET_ALERTS(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_CE_RECOMMENDATIONS(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_COST_EVENT_DATA(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_KUBERNETES_UTILIZATION_DATA(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_NODE_INFO(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_NODE_POOL_AGGREGATED(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_POD_INFO(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_UTILIZATION_DATA(emptyList(), TIMESCALE_DB_DELETION),
  TIMESCALE_WORKLOAD_INFO(emptyList(), TIMESCALE_DB_DELETION),

  // Not required to delete
  // MONGO_EVENTS_DB_FEATURE_FLAG(emptyList(), MONGO_EVENTS_DB_DELETION),
  // MONGO_EVENTS_DB_GOVERNANCE_ACTIVITIES(emptyList(), MONGO_EVENTS_DB_DELETION),
  // MONGO_EVENTS_DB_PRIMARY_VERSION(emptyList(), MONGO_EVENTS_DB_DELETION),
  // MONGO_EVENTS_DB_LOCKS(emptyList(), MONGO_EVENTS_DB_DELETION),
  // MONGO_EVENTS_DB_MORPHIA_MOVE(emptyList(), MONGO_EVENTS_DB_DELETION),
  ;

  // prerequisites need to be completed before this one
  private final List<DataDeletionStep> prerequisites;
  private final DataDeletionBucket bucket;

  DataDeletionStep(List<DataDeletionStep> prerequisites, DataDeletionBucket bucket) {
    this.prerequisites = prerequisites;
    this.bucket = bucket;
  }
}
