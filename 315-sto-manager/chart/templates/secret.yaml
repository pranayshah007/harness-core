apiVersion: v1
kind: Secret
metadata:
  name: service-accounts-sto-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations:
    {{- if .Values.service.annotations }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.service.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.global.commonAnnotations }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
data:
  cloud-data-store: {{.Values.ngServiceAccount}}
  redis-labs-ca-truststore: {{.Values.redislabsCATruststore}}
---
apiVersion: v1
kind: Secret
metadata:
  name: sto-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations:
    {{- if .Values.global.commonAnnotations }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
type: Opaque
data:
  {{- include "sto-manager.generateSecrets" (dict "ctx" $) | indent 2 }}
# stringData:
  ##DO MANUALLY
  # MONGO_URI: 'mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc/harness?authSource=admin'
  # STOMANAGER_MONGO_URI: 'mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc/harness-sto?authSource=admin'
  # PMS_MONGO_URI: 'mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc:27017/pms-harness?replicaSet=rs0&authSource=admin'
  # NOTIFICATION_MONGO_URI: 'mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc:27017/notifications?replicaSet=rs0&authSource=admin'
  # TIMESCALE_URI: 'jdbc:postgresql://timescaledb-single-chart.{{ .Release.Namespace }}:5432/harness'
  # TIMESCALE_PASSWORD:
  # TIMESCALEDB_USERNAME: postgres
  # STO_SERVICE_GLOBAL_TOKEN: token
#  NEXT_GEN_MANAGER_SECRET: {{.Values.NEXT_GEN_MANAGER_SECRET}}
#  MANAGER_SECRET: {{.Values.MANAGER_SECRET}}
#  ACCESS_CONTROL_SECRET: {{.Values.ACCESS_CONTROL_SECRET}}
#  JWT_AUTH_SECRET: {{.Values.JWT_AUTH_SECRET}}
#  JWT_IDENTITY_SERVICE_SECRET: {{.Values.JWT_IDENTITY_SERVICE_SECRET}}
#  EVENTS_FRAMEWORK_REDIS_USERNAME: {{.Values.EVENTS_FRAMEWORK_REDIS_USERNAME | quote}}
#  EVENTS_FRAMEWORK_REDIS_PASSWORD: {{.Values.EVENTS_FRAMEWORK_REDIS_PASSWORD | quote}}
#  EVENTS_FRAMEWORK_REDIS_SSL_CA_TRUST_STORE_PASSWORD: {{.Values.EVENTS_FRAMEWORK_REDIS_SSL_CA_TRUST_STORE_PASSWORD}}
