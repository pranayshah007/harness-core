# Copyright 2021 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.
server:
  applicationConnectors:
    - type: https
      port: 7372
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
      maxRequestHeaderSize: 100KiB
    - type: http
      port: 15057
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: https
      port: 7272
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
  requestLog:
    appenders: []

logging:
  level: INFO
  loggers:
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

accessControlClient:
  enableAccessControl: false
  accessControlServiceConfig:
    baseUrl: http://localhost:9006/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  accessControlServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

iacmmanager-mongo:
  uri: mongodb://localhost:27017/iacm-harness
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  indexManagerMode: AUTO
  aliasDBName: iacm-harness

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ""
  password: ""

enableAuth: false

distributedLockImplementation: REDIS

logServiceConfig:
  baseUrl: https://qa.harness.io/log-service/
  globalToken: "c76e567a-b341-404d-a8dd-d9738714eb82"

tiServiceConfig:
  baseUrl: http://localhost:8078
  globalToken: "78d16b66-4b4c-11eb-8377-acde48001122"

stoServiceConfig:
  baseUrl: http://localhost:8078
  globalToken: "78d16b66-4b4c-11eb-8377-acde48001122"

iacmServiceConfig:
  baseUrl: http://localhost:8080
  externalUrl: http://localhost:8080
  globalToken: "551715ea-ca71-11ec-9d64-0242ac120002"
  costEstimationToken: "551715ea-ca71-11ec-9d64-0242ac120002"
  costEstimationAPIIUrl: "https://pricing.api.infracost.io"

sscaServiceConfig:
  httpClientConfig:
    baseUrl: http://localhost:8186
    connectTimeOutSeconds: 40
    readTimeOutSeconds: 40
  sscaManagerEnabled: ${SSCA_MANAGER_ENABLED:-false}
  serviceSecret: secret

managerTarget: localhost:9880
managerAuthority: localhost
managerServiceSecret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
jwtAuthSecret: "dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq"
ngManagerServiceSecret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
jwtIdentityServiceSecret: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="

ngManagerClientConfig:
  baseUrl: http://localhost:7457/
  connectTimeOutSeconds: 40
  readTimeOutSeconds: 40

managerClientConfig:
  baseUrl: http://localhost:3457/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15
ciExecutionServiceConfig:
  miningPatternConfig:
    gcsCreds: null
    projectId: null
    bucketName: null
  queueServiceClientConfig:
    httpClientConfig:
      baseUrl: http://localhost:9544/
      connectTimeOutSeconds: 15
      readTimeOutSeconds: 15
    queueServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
    envNamespace: ${EVENTS_FRAMEWORK_ENV_NAMESPACE:-localhost}
  addonImageTag: releaseBuild-30
  liteEngineImageTag: releaseBuild-29
  defaultMemoryLimit: 500
  defaultCPULimit: 400
  defaultInternalImageConnector: ''
  executionLimits:
    free:
      defaultTotalExecutionCount: 20
      defaultMacExecutionCount: 5
    team:
      defaultTotalExecutionCount: 50
      defaultMacExecutionCount: 10
    enterprise:
      defaultTotalExecutionCount: 100
      defaultMacExecutionCount: 10
    overrideConfig:
      - "kmpySmUISimoRrJL6NL73w:1:1"
  pvcDefaultStorageSize: 25600
  delegateServiceEndpointVariableValue: "delegate-service:8080"
  addonImage: harness/ci-addon:1.16.3
  liteEngineImage: harness/ci-lite-engine:1.16.3
  isLocal: false
  hostedVmConfig:
    splitLinuxAmd64Pool: false
    splitLinuxArm64Pool: false
    splitWindowsAmd64Pool: false
  stepConfig:
    # The below config is for K8 steps
    gitCloneConfig:
      # Use rootless image only for K8 git clone
      image: harness/drone-git:1.3.4-rootless
      entrypoint:
        - /usr/local/bin/clone
      windowsEntrypoint:
        - "pwsh"
        - "C:\\bin\\clone.ps1"
    buildAndPushDockerRegistryConfig:
      image: plugins/kaniko:1.7.5
      entrypoint:
        - /kaniko/kaniko-docker
    buildAndPushECRConfig:
      image: plugins/kaniko-ecr:1.7.5
      entrypoint:
        - /kaniko/kaniko-ecr
    buildAndPushGCRConfig:
      image: plugins/kaniko-gcr:1.7.5
      entrypoint:
        - /kaniko/kaniko-gcr
    buildAndPushACRConfig:
      image: plugins/kaniko-acr:1.7.5
      entrypoint:
        - /kaniko/kaniko-acr
    gcsUploadConfig:
      image: plugins/gcs:1.4.0
      entrypoint:
        - /bin/drone-gcs
      windowsEntrypoint:
        - "C:\\drone-gcs.exe"
    s3UploadConfig:
      image: plugins/s3:1.2.3
      entrypoint:
        - /bin/drone-s3
      windowsEntrypoint:
        - "C:\\drone-s3.exe"
    securityConfig:
      image: harness/sto-plugin:dev
      entrypoint:
        - /bin/sh
        - -c
        - python3 ${DOCKER_ENTRYPOINT}
    artifactoryUploadConfig:
      image: plugins/artifactory:1.4.4
      entrypoint:
        - /bin/plugin
      windowsEntrypoint:
        - "C:\\bin\\drone-artifactory.exe"
    cacheGCSConfig:
      image: plugins/cache:1.5.9
      entrypoint:
        - /bin/drone-cache
      windowsEntrypoint:
        - "C:\\drone-cache.exe"
    cacheS3Config:
      image: plugins/cache:1.5.9
      entrypoint:
        - /bin/drone-cache
      windowsEntrypoint:
        - "C:\\drone-cache.exe"
    sscaOrchestrationConfig:
      image: harness/ssca-plugin:0.3.0
      entrypoint:
        - /bin/ssca-plugin
    sscaEnforcementConfig:
      image: harness/ssca-plugin:0.3.0
      entrypoint:
        - /bin/ssca-plugin
    iacmTerraform:
      image: plugins/harness_terraform:dev
      entrypoint:
        - /bin/harness-terraform
      windowsEntrypoint:
        - "C:\\harness-terraform.exe"
    vmImageConfig:
      # Use root image for VM git clone
      gitClone: harness/drone-git:1.3.3
      buildAndPushDockerRegistry: plugins/docker:20.14.4
      buildAndPushACR: plugins/acr:20.14.3
      buildAndPushECR: plugins/ecr:20.14.3
      buildAndPushGCR: plugins/gcr:20.14.3
      gcsUpload: plugins/gcs:1.4.0
      s3Upload: plugins/s3:1.2.3
      security: harness/sto-plugin:dev
      artifactoryUpload: plugins/artifactory:1.4.4
      cacheGCS: plugins/cache:1.5.9
      cacheS3: plugins/cache:1.5.9
      sscaOrchestration: harness/ssca-plugin:0.3.0
      sscaEnforcement: harness/ssca-plugin:0.3.0
      iacmTerraform: plugins/harness_terraform:dev
    vmContainerlessStepConfig:
      s3UploadConfig:
        name: github.com/drone-plugins/drone-s3@refs/tags/v1.2.2
      gcsUploadConfig:
        name: github.com/drone-plugins/drone-gcs@refs/tags/v1.3.1
      cacheS3Config:
        name: github.com/drone-plugins/drone-meltwater-cache@refs/tags/v1.5.6
      cacheGCSConfig:
        name: github.com/drone-plugins/drone-meltwater-cache@refs/tags/v1.5.6
      gitCloneConfig:
        name: github.com/wings-software/drone-git@refs/tags/v1.3.9
      dockerBuildxConfig:
        name: github.com/drone-plugins/drone-buildx@refs/tags/v1.0.1
      dockerBuildxEcrConfig:
        name: github.com/drone-plugins/drone-buildx-ecr@refs/tags/v1.0.1
      dockerBuildxGcrConfig:
        name: github.com/drone-plugins/drone-buildx-gcr@refs/tags/v1.0.1
  gitnessConfig:
    jwtSecret: ${GITNESS_JWT_SECRET:-"IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"}
    httpClientConfig:
      baseUrl: ${GITNESS_INTERNAL_URL:- http://localhost:3000}

harnessCodeGitUrl: ${HARNESS_CODE_GIT_URL:- http://localhost:3000/git}

scmConnectionConfig:
  url: localhost:8091

pmsSdkExecutionPoolConfig:
  corePoolSize: ${PMS_SDK_EXECUTION_POOL_CORE_SIZE:-50}
  maxPoolSize: ${PMS_SDK_EXECUTION_POOL_MAX_SIZE:-300}
  idleTime: ${PMS_SDK_EXECUTION_POOL_IDLE_TIME:-60}
  timeUnit: ${PMS_SDK_EXECUTION_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pmsSdkOrchestrationEventPoolConfig:
  corePoolSize: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_CORE_SIZE:-50}
  maxPoolSize: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_MAX_SIZE:-300}
  idleTime: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_IDLE_TIME:-60}
  timeUnit: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

asyncDelegateResponseConsumption:
  corePoolSize: ${ASYNC_DELEGATE_RESPONSE_THREAD_COUNT:-1}

pmsSdkGrpcServerConfig:
  connectors:
    - port: 15301
      secure: true
      keyFilePath: key.pem
      certFilePath: cert.pem
    - port: 15302

pmsGrpcClientConfig:
  target: localhost:12011
  authority: localhost

apiUrl: https://localhost:8181/#/
isLocal: true

shouldConfigureWithPMS: ${SHOULD_CONFIGURE_WITH_PMS:-false}


eventsFramework:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

hostname: ${HOSTNAME:-localhost}

basePathPrefix: ${BASE_PATH_PREFIX:-""}

segmentConfiguration:
  enabled: false
  url: "segment_url_place_holder"
  apiKey: "segment_api_key"
  certValidationRequired: false

cacheConfig:
  cacheBackend: REDIS
  cacheNamespace: ""
  disabledCaches: [ ]
  enterpriseCacheEnabled: true

enforcementClientConfiguration:
  enforcementCheckEnabled: false

pmsPlanCreatorServicePoolConfig:
  corePoolSize: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_CORE_SIZE:-2}
  maxPoolSize: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_MAX_SIZE:-3}
  idleTime: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

policyManagerSecret: secret

opaClientConfig:
  baseUrl: http://localhost:3000
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

streamPerServiceConfiguration: ${PIE_STREAM_PER_SERVICE:- false}
