// Copyright 2021 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Shield 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

syntax = "proto3";

package io.harness.pms.contracts.plan;

option java_multiple_files = true;

import "io/harness/pms/contracts/plan/plan_creation_service.proto";
import "io/harness/pms/contracts/ambiance/ambiance.proto";
import "google/protobuf/wrappers.proto";

service PluginInfoProviderService {
  rpc getPluginInfosList(PluginCreationBatchRequest) returns (PluginCreationBatchResponse);
}

message PluginCreationBatchRequest {
  repeated PluginCreationRequest pluginCreationRequest = 1;
  PortDetails usedPortDetails = 2;
  io.harness.pms.contracts.ambiance.Ambiance ambiance = 3;
}

message PluginCreationBatchResponse {
  map<string, PluginCreationResponseList> requestIdToResponse = 1;
}

message PluginCreationResponseList {
  repeated PluginCreationResponseWrapper response = 1;
  bool isParallel = 2;
}

message PluginCreationResponseWrapper {
  StepInfoProto stepInfo = 1;
  PluginCreationResponse response = 2;
  bool shouldSkip = 3;
}

message StepInfoProto {
  string name = 1;
  string identifier = 2;
  string uuid = 3;
}

message PluginCreationRequest {
  string type = 1;
  string stepJsonNode = 2;
  io.harness.pms.contracts.ambiance.Ambiance ambiance = 3;
  string accountId = 4;
  string osType = 5;
  PortDetails usedPortDetails = 6;
  string requestId = 7;
}

message PluginCreationResponse {
  oneof response {
    PluginDetails pluginDetails = 1;
    io.harness.pms.contracts.plan.ErrorResponse error = 2;
  }

  // add secret details in step too.
}

message PluginDetails {
  PluginContainerResources resource = 1;
  ImageDetails imageDetails = 2;
  map<string, string> envVariables = 3;
  bool privileged = 4;
  int32 runAsUser = 5;
  PortDetails totalPortUsedDetails = 6;
  repeated int32 portUsed = 7;
  repeated SecretVariable secretVariable = 8;
  repeated ConnectorDetails connectors_for_step = 9;
  google.protobuf.BoolValue isHarnessManaged = 10;
  map<string, string> envVariablesWithPlainTextSecret = 11;
}

message PluginContainerResources {
  int32 cpu = 1;
  int32 memory = 2;
}

message ImageDetails {
  ConnectorDetails connectorDetails = 1;
  ImageInformation imageInformation = 2;
}
message ImageInformation {
  google.protobuf.StringValue imageName = 1;
  google.protobuf.StringValue imagePullPolicy = 2;
  google.protobuf.StringValue imageTag = 3;
  google.protobuf.StringValue sourceName = 4;
  google.protobuf.StringValue registryUrl = 5;
  google.protobuf.StringValue username = 6;
  google.protobuf.StringValue usernameRef = 7;
  google.protobuf.StringValue password = 8;
  google.protobuf.StringValue domainName = 9;
}

message ConnectorDetails {
  string connectorRef = 1;
  map<string, string> connector_secret_env_map = 2;
}

message PortDetails {
  repeated int32 usedPorts = 1;
}

message SecretVariable {
  // get value as toSecretRefStringValue
  string name = 1;
  string value = 2;
}