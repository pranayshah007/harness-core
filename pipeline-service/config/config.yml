logging:
  level: INFO
  loggers:
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

server:
  applicationConnectors:
    - type: http
      port: 12001
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: http
      port: 12002
  requestLog:
    appenders: []
  maxThreads: 1024

pipelineExecutionPoolConfig:
  corePoolSize: ${PIPELINE_EXECUTION_POOL_CORE_SIZE:-5}
  maxPoolSize: ${PIPELINE_EXECUTION_POOL_MAX_SIZE:-10}
  idleTime: ${PIPELINE_EXECUTION_POOL_IDLE_TIME:-10}
  timeUnit: ${PIPELINE_EXECUTION_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

commonPoolConfig:
  corePoolSize: ${COMMON_POOL_CORE_SIZE:-10}
  maxPoolSize: ${COMMON_POOL_MAX_SIZE:-100}
  idleTime: ${COMMON_POOL_IDLE_TIME:-500}
  timeUnit: ${COMMON_POOL_IDLE_TIME_TIME_UNIT:-MILLISECONDS}

orchestrationVisualizationThreadPoolConfig:
  corePoolSize: ${ORCHESTRATION_VISUALIZATION_POOL_CORE_SIZE:-3}
  maxPoolSize: ${ORCHESTRATION_VISUALIZATION_POOL_MAX_SIZE:-10}
  idleTime: ${ORCHESTRATION_VISUALIZATION_POOL_IDLE_TIME:-10}
  timeUnit: ${ORCHESTRATION_VISUALIZATION_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

orchestrationPoolConfig:
  corePoolSize: ${ORCHESTRATION_POOL_CORE_SIZE:-20}
  maxPoolSize: ${ORCHESTRATION_POOL_MAX_SIZE:-100}
  idleTime: ${ORCHESTRATION_POOL_IDLE_TIME:-60}
  timeUnit: ${ORCHESTRATION_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pmsSdkExecutionPoolConfig:
  corePoolSize: ${PMS_SDK_EXECUTION_POOL_CORE_SIZE:-20}
  maxPoolSize: ${PMS_SDK_EXECUTION_POOL_MAX_SIZE:-100}
  idleTime: ${PMS_SDK_EXECUTION_POOL_IDLE_TIME:-60}
  timeUnit: ${PMS_SDK_EXECUTION_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pmsSdkOrchestrationEventPoolConfig:
  corePoolSize: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_CORE_SIZE:-10}
  maxPoolSize: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_MAX_SIZE:-50}
  idleTime: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_IDLE_TIME:-60}
  timeUnit: ${PMS_SDK_ORCHESTRATION_EVENT_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

podCleanUpThreadPoolConfig:
  corePoolSize: ${POD_CLEANUP_POOL_CORE_SIZE:-5}
  maxPoolSize: ${{POD_CLEANUP_POOL_MAX_SIZE:-10}
  idleTime: ${{POD_CLEANUP_POOL_IDLE_TIME:-10}
  timeUnit: ${{POD_CLEANUP_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

mongo:
  uri: mongodb://localhost:27017/pms-harness
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  socketTimeout: 360000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  indexManagerMode: AUTO
  transactionsEnabled: false
  aliasDBName: pms-harness
  traceMode: DISABLED

grpcServerConfig:
  connectors:
    - port: 12011
      secure: true
      keyFilePath: key.pem
      certFilePath: cert.pem
    - port: 12012

grpcClientConfigs:
  cd:
    target: localhost:12101
    authority: localhost
  cv:
    target: localhost:12401
    authority: localhost
  srm:
    target: localhost:12401
    authority: localhost
  ci:
    target: localhost:12301
    authority: localhost
  sto:
    target: localhost:14301
    authority: localhost
  iacm:
    target: localhost:15301
    authority: localhost
  idp:
    target: ${IDP_SERVICE_TARGET:-localhost:12501}
    authority: ${IDP_SERVICE_AUTHORITY:-localhost}

yamlSchemaClientConfig:
  yamlSchemaHttpClientMap:
    ci:
      serviceHttpClientConfig:
        baseUrl: http://localhost:4457/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
    cd:
      serviceHttpClientConfig:
        baseUrl: http://localhost:7457/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
    cv:
      serviceHttpClientConfig:
        baseUrl: http://localhost:6457/cv/api/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
    srm:
      serviceHttpClientConfig:
        baseUrl: http://localhost:6457/cv/api/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
    sto:
      serviceHttpClientConfig:
        baseUrl: http://localhost:14057/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
    iacm:
      serviceHttpClientConfig:
        baseUrl: http://localhost:15057/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"


managerTarget: localhost:9880
managerAuthority: localhost

eventsFramework:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

debeziumConsumersConfigs:
  planExecutionsSummaryStreaming:
    topic: ${DEBEZIUM_CONSUMER_TOPIC_NAME:-DEBEZIUM_pmsMongo.pms-harness.planExecutionsSummary}
    batchSize: ${DEBEZIUM_CONSUMER_BATCH_SIZE:-100}
  planExecutionsSummarySnapshot:
    topic: ${DEBEZIUM_CONSUMER_SNAPSHOT_TOPIC_NAME:-DEBEZIUM_SNAPSHOT_pmsMongoSnapshot.pms-harness.planExecutionsSummary}
    batchSize: ${DEBEZIUM_CONSUMER_SNAPSHOT_BATCH_SIZE:-100}

managerClientConfig:
  baseUrl: http://localhost:3457/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15
managerServiceSecret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"

notificationClient:
  messageBroker:
    type: MONGO
    uri: mongodb://localhost:27017/notification
    connectTimeout: 30000
    serverSelectionTimeout: 90000
    socketTimeout: 360000
    maxConnectionIdleTime: 600000
    connectionsPerHost: 300
  httpClient:
    baseUrl: http://localhost:9005/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  secrets:
    notificationClientSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

ngManagerServiceHttpClientConfig:
  baseUrl: http://localhost:7457/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

pipelineServiceClientConfig:
  baseUrl: http://localhost:12001/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

templateServiceClientConfig:
  baseUrl: http://localhost:15001/api/
  connectTimeOutSeconds: 120
  readTimeOutSeconds: 120

containerStepConfigureWithCi: ${SHOULD_CONFIGURE_WITH_CI:-false}
ciServiceClientConfig:
  baseUrl: http://localhost:4457/api/
  connectTimeOutSeconds: 120
  readTimeOutSeconds: 120

queueServiceClientConfig:
  httpClientConfig:
    baseUrl: ${HSQS_BASE_URL:-http://localhost:9544/}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  queueServiceSecret: ${HSQS_AUTH_TOKEN:-ThisIsMyUniqueJwtQueueServiceSecret}
  envNamespace: ${EVENTS_FRAMEWORK_ENV_NAMESPACE:-localhost}
  topic: ${HSQS_TOPIC:-pipeline}

ngManagerServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
pipelineServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
templateServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
ciServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
jwtAuthSecret: dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq
jwtIdentityServiceSecret: HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU=

allowedOrigins:
  - "*"

accessControlClient:
  enableAccessControl: false
  accessControlServiceConfig:
    baseUrl: http://localhost:9006/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  accessControlServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

pipelineServiceBaseUrl: https://localhost:8181/#
pmsApiBaseUrl: http://localhost:12001/api/

triggerConfig:
  webhookBaseUrl: http://localhost:7457/api/
  customBaseUrl: http://localhost:12001/api/

logStreamingServiceConfig:
  baseUrl: http://localhost:8079
  serviceToken: token
  threadPoolConfig:
    corePoolSize: ${LOG_STREAMING_CLIENT_POOL_CORE_SIZE:-10}
  delayToClosePrefixLogStreamInSeconds: ${LOG_STREAMING_CLIENT_DELAY_TO_CLOSE_LOG_STREAM_IN_SECONDS:-5}

# remove in a few cycles
opaServerConfig:
  baseUrl: http://localhost:3000
  secret: secret

policyManagerSecret: secret

opaClientConfig:
  baseUrl: http://localhost:3000
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

iteratorsConfig:
  webhook:
    threadPoolCount: 2
    enabled: true
    targetIntervalInSeconds: 5
  scheduledTrigger:
    threadPoolCount: 2
    enabled: true
    targetIntervalInSeconds: 15
  timeoutEngine:
    threadPoolCount: 5
    enabled: true
    targetIntervalInSeconds: 10
  timeoutEngineRedisMode:
    threadPoolSize: ${TIMEOUT_ITERATOR_REDIS_MODE_THREAD_POOL_SIZE:-5}
    enabled: true
    targetIntervalInSeconds: 10
    threadPoolIntervalInSeconds: 2
    redisLockTimeout: 5
    redisBatchSize: ${TIMEOUT_ITERATOR_REDIS_BATCH_SIZE:-10}
  barrier:
    threadPoolCount: 2
    enabled: true
    targetIntervalInSeconds: 60
  approvalInstance:
    threadPoolCount: 2
    enabled: true
    targetIntervalInSeconds: 60
  resourceRestraint:
    threadPoolCount: 2
    enabled: true
    targetIntervalInSeconds: 300
  interruptMonitor:
    threadPoolCount: 2
    enabled: true
    targetIntervalInSeconds: 180

orchestrationStepConfig:
  ffServerBaseUrl: http://127.0.0.1:3000/api/1.0
  ffServerApiKey: secret
  ffServerSSLVerify: false
  containerStepConfig:
    addonImageTag: releaseBuild-30
    liteEngineImageTag: releaseBuild-29
    defaultMemoryLimit: 500
    defaultCPULimit: 400
    defaultInternalImageConnector: 'account.harnessImage'
    pvcDefaultStorageSize: 25600
    delegateServiceEndpointVariableValue: "delegate-service:8080"
    addonImage: harness/ci-addon:1.16.25
    liteEngineImage: harness/ci-lite-engine:1.16.25
    isLocal: false
    logStreamingContainerStepBaseUrl: ${LOG_STREAMING_CONTAINER_STEP_BASE_URL:-http://localhost:8079}
    pluginConfig:
      sscaOrchestrationConfig:
        image: ${SSCA_ORCHESTRATION_IMAGE:-harness/ssca-plugin:0.11.0}
      sscaEnforcementConfig:
        image: ${SSCA_ENFORCEMENT_IMAGE:-harness/ssca-plugin:0.11.0}
    #Todo: Move to config Management Service
    moduleToSupportedSteps:
      cd: [ "DownloadManifests", "AwsSamBuild", "AwsSamDeploy", "ServerlessAwsLambdaPrepareRollbackV2", "ServerlessAwsLambdaDeployV2", "ServerlessAwsLambdaPackageV2", "AwsCdkBootstrap", "AwsCdkSynth", "AwsCdkDiff", "ServerlessAwsLambdaRollbackV2", "AwsCdkDeploy", "AwsCdkDestroy", "AwsCdkRollback"]
      ci: [ "Background", "background", "GitClone", "Run", "Plugin", "Action", "SlsaVerification"]


shouldDeployWithGitSync: true

gitSdkConfiguration:
  gitSdkGrpcServerConfig:
    connectors:
      - port: 14001
        secure: true
        keyFilePath: key.pem
        certFilePath: cert.pem
      - port: 14002
  gitManagerGrpcClientConfig:
    target: localhost:13001
    authority: localhost
  scmConnectionConfig:
    url: localhost:8091

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ""
  password: ""
  timeout: 6000
  subscriptionsPerConnection: 5

distributedLockImplementation: REDIS

enableDashboardTimescale: false

timescaledb:
  timescaledbUrl: "jdbc:postgresql://localhost:5432/harness"
  timescaledbUsername: "postgres"
  timescaledbPassword: ""
  connectTimeout: 10
  socketTimeout: 30
  logUnclosedConnections: false
  loggerLevel: OFF

auditClientConfig:
  baseUrl: http://localhost:9005/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

enableAudit: false

cacheConfig:
  cacheBackend: REDIS
  cacheNamespace: ""
  disabledCaches: [ ]
  enterpriseCacheEnabled: true

hostname: ${HOSTNAME:-localhost}

basePathPrefix: ${BASE_PATH_PREFIX:-""}

pipelineEventConsumersConfig:
  interrupt:
    threads: 1
  orchestrationEvent:
    threads: 1
  facilitatorEvent:
    threads: 1
  nodeStart:
    threads: 1
  progress:
    threads: 1
  advise:
    threads: 1
  resume:
    threads: 1
  sdkResponse:
    threads: 1
  graphUpdate:
    threads: 1
  pipelineExecutionEvent:
    threads: 1
  pipelineExecutionEventSnapshot:
    threads: 1
  partialPlanResponse:
    threads: 1
  createPlan:
    threads: 1
  planNotify:
    threads: 1
  pmsNotify:
    threads: 1
  webhookEvent:
    threads: 1
  initiateNode:
    threads: 1
  pollingEvent:
    threads: 1
  triggerExecutionEvent:
    threads: ${TRIGGER_EXECUTION_EVENT_CONSUMER_THREAD_COUNT:-1}
  asyncFilterCreationEvent:
    threads: ${ASYNC_FILTER_CREATION_CONSUMER_THREAD_COUNT:-1}

delegatePollingConfig:
  syncDelay: 2000
  asyncDelay: 2000
  progressDelay: 2000

segmentConfiguration:
  enabled: false
  url: https://api.segment.io/v1/
  apiKey: ""

enforcementClientConfiguration:
  enforcementCheckEnabled: false

shouldUseInstanceCache: ${SHOULD_USE_INSTANCE_CACHE:-false}

pmsPlanCreatorServicePoolConfig:
  corePoolSize: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_CORE_SIZE:-2}
  maxPoolSize: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_MAX_SIZE:-3}
  idleTime: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${PLAN_CREATOR_SERVICE_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

planCreatorMergeServicePoolConfig:
  corePoolSize: ${PLAN_CREATOR_MERGE_SERVICE_EXECUTOR_POOL_CORE_SIZE:-5}
  maxPoolSize: ${PLAN_CREATOR_MERGE_SERVICE_EXECUTOR_POOL_MAX_SIZE:-10}
  idleTime: ${PLAN_CREATOR_MERGE_SERVICE_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${PLAN_CREATOR_MERGE_SERVICE_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

yamlSchemaExecutorServiceConfig:
  corePoolSize: ${YAML_SCHEMA_EXECUTOR_POOL_CORE_SIZE:-2}
  maxPoolSize: ${YAML_SCHEMA_EXECUTOR_POOL_MAX_SIZE:-10}
  idleTime: ${YAML_SCHEMA_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${YAML_SCHEmA_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

dashboardExecutorServiceConfig:
  corePoolSize: ${DASHBOARD_EXECUTOR_POOL_CORE_SIZE:-3}
  maxPoolSize: ${DASHBOARD_EXECUTOR_POOL_MAX_SIZE:-15}
  idleTime: ${DASHBOARD_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${DASHBOARD_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pipelineRedisEventsConfig:
  setupUsage:
    maxTopicSize: ${SETUP_USAGE_MAX_TOPIC_SIZE:-10000}
  planNotifyEvent:
    maxTopicSize: ${PLAN_NOTIFY_EVENT_MAX_TOPIC_SIZE:-5000}
  webhookPayloadDetails:
    maxTopicSize: ${WEBHOOK_REQUEST_PAYLOAD_DETAILS_MAX_TOPIC_SIZE:-10000}
  entityCrud:
    maxTopicSize: ${ENTITY_CRUD_MAX_TOPIC_SIZE:-100000}
  orchestrationNotifyEvent:
    maxTopicSize: ${PMS_ORCHESTRATION_NOTIFY_EVENT_MAX_TOPIC_SIZE:-5000}

pipelineSdkRedisEventsConfig:
  pipelineSdkResponseEvent:
    maxTopicSize: ${PIPELINE_SDK_RESPONSE_EVENT_MAX_TOPIC_SIZE:-5000}

orchestrationRedisEventsConfig:
  pipelineInterruptEvent:
    maxTopicSize: ${PIPELINE_INTERRUPT_EVENT_MAX_TOPIC_SIZE:-1000}
  pipelineOrchestrationEvent:
    maxTopicSize: ${PIPELINE_ORCHESTRATION_EVENT_MAX_TOPIC_SIZE:-5000}
  pipelineFacilitatorEvent:
    maxTopicSize: ${PIPELINE_FACILITATOR_EVENT_MAX_TOPIC_SIZE:-5000}
  pipelineNodeStartEvent:
    maxTopicSize: ${PIPELINE_NODE_START_EVENT_MAX_TOPIC_SIZE:-5000}
  pipelineProgressEvent:
    maxTopicSize: ${PIPELINE_PROGRESS_MAX_TOPIC_SIZE:-5000}
  pipelineNodeAdviseEvent:
    maxTopicSize: ${PIPELINE_NODE_ADVISE_MAX_TOPIC_SIZE:-5000}
  pipelineNodeResumeEvent:
    maxTopicSize: ${PIPELINE_NODE_RESUME_MAX_TOPIC_SIZE:-5000}
  pipelineStartPartialPlanCreator:
    maxTopicSize: ${START_PARTIAL_PLAN_CREATOR_MAX_TOPIC_SIZE:-5000}

orchestrationLogConfiguration:
  orchestrationLogBatchSize: ${ORCHESTRATION_LOG_BATCH_SIZE:-5}
  shouldUseExpiredListener: ${SHOULD_USE_ORCHESTRATION_LOG_EXPIRED_LISTENER:-true}

planCreatorMergeServiceDependencyBatch: ${PLAN_CREATOR_DEPENDENCY_BATCH:-50}

enableOpentelemetry: false

############ Json Expansion Config variables #################

jsonExpansionPoolConfig:
  corePoolSize: ${JSON_EXPANSION_EXECUTOR_POOL_CORE_SIZE:-5}
  maxPoolSize: ${JSON_EXPANSION_EXECUTOR_POOL_MAX_SIZE:-10}
  idleTime: ${JSON_EXPANSION_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${JSON_EXPANSION_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

jsonExpansionRequestBatchSize: ${JSON_EXPANSION_BATCH_SIZE:-50}

#############################################################

orchestrationRestrictionConfiguration:
  maxNestedLevelsCount: ${MAX_NESTED_LEVELS_COUNT:-25}
  useRestrictionForFree: ${USE_RESTRICTION_FOR_FREE:-false}
  useRestrictionForTeam: ${USE_RESTRICTION_FOR_TEAM:-false}
  useRestrictionForEnterprise: ${USE_RESTRICTION_FOR_ENTERPRISE:-false}
  planExecutionRestriction:
     free: ${PLAN_EXECUTION_RESTRICTION_FREE:-2}
     team: ${PLAN_EXECUTION_RESTRICTION_TEAM:-200}
     enterprise: ${PLAN_EXECUTION_RESTRICTION_ENTERPRISE:-500}
  #remove below restriction
  pipelineCreationRestriction:
    free: ${PIPELINE_CREATION_RESTRICTION_FREE:-5}
    team: ${PIPELINE_CREATION_RESTRICTION_TEAM:-10000}
    enterprise: ${PIPELINE_CREATION_RESTRICTION_ENTERPRISE:-10000}
  #remove below restriction
  maxConcurrencyRestriction:
    free: ${MAX_CONCURRENCY_RESTRICTION_FREE:-2}
    team: ${MAX_CONCURRENCY_RESTRICTION_TEAM:-50}
    enterprise: ${MAX_CONCURRENCY_RESTRICTION_ENTERPRISE:-100}
  # Parallelism hard limit on number of nodes at any place
  totalParallelismStopRestriction:
    free: ${TOTAL_PARALLELISM_RESTRICTION_FREE:-2}
    team: ${TOTAL_PARALLELISM_RESTRICTION_TEAM:-256}
    enterprise: ${TOTAL_PARALLELISM_RESTRICTION_ENTERPRISE:-256}
  #TODO(archit): Add passing timeout to all planCreators to adopt
  maxPipelineTimeoutInHours:
    free: ${MAX_PIPELINE_TIMEOUT_FREE:-1}
    team: ${MAX_PIPELINE_TIMEOUT_TEAM:-720}
    enterprise: ${MAX_PIPELINE_TIMEOUT_ENTERPRISE:-840}
  maxStageTimeoutInHours:
    free: ${MAX_STAGE_TIMEOUT_FREE:-1}
    team: ${MAX_STAGE_TIMEOUT_TEAM:-720}
    enterprise: ${MAX_STAGE_TIMEOUT_ENTERPRISE:-840}
  # 0 means no limit
  maxStepTimeoutInHours:
    free: ${MAX_STEP_TIMEOUT_FREE:-1}
    team: ${MAX_STEP_TIMEOUT_TEAM:-0}
    enterprise: ${MAX_STEP_TIMEOUT_ENTERPRISE:-0}

grpcNegotiationType: ${GRPC_NEGOTIATION_TYPE:-TLS}

lockNotifyResponseCleanup: ${LOCK_NOTIFY_RESPONSE_CLEANUP:-true}

shouldUseEventsFrameworkSnapshotDebezium: ${SHOULD_USE_EVENTS_FRAMEWORK_SNAPSHOT_DEBEZIUM:-false}
# Events framework configuration for debezium consumer in case of snapshotting
eventsFrameworkSnapshotDebezium:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

disableFreezeNotificationTemplate: ${DISABLE_FREEZE_NOTIFY_TEMPLATE:-true}

cfClientConfig:
  apiKey: ""
  configUrl: "https://config.feature-flags.uat.harness.io/api/1.0"
  eventUrl: "https://event.feature-flags.uat.harness.io/api/1.0"
  analyticsEnabled: true
  connectionTimeout: 10000
  readTimeout: 45000
  bufferSize: 10240
  retries: 6
  sleepInterval: 5000

featureFlagConfig:
  featureFlagSystem: LOCAL
  syncFeaturesToCF: false

sscaServiceConfig:
  httpClientConfig:
    baseUrl: http://localhost:8186
    connectTimeOutSeconds: 40
    readTimeOutSeconds: 40
  sscaManagerEnabled: ${SSCA_MANAGER_ENABLED:-false}
  serviceSecret: secret

pipelineAsyncValidationPoolConfig:
  corePoolSize: ${PIPELINE_ASYNC_VALIDATION_EXECUTOR_POOL_CORE_SIZE:-2}
  maxPoolSize: ${PIPELINE_ASYNC_VALIDATION_EXECUTOR_POOL_MAX_SIZE:-25}
  idleTime: ${PIPELINE_ASYNC_VALIDATION_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${PIPELINE_ASYNC_VALIDATION_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

triggerAuthenticationPoolConfig:
  corePoolSize: ${TRIGGER_AUTHENTICATION_EXECUTOR_POOL_CORE_SIZE:-2}
  maxPoolSize: ${TRIGGER_AUTHENTICATION_EXECUTOR_POOL_MAX_SIZE:-25}
  idleTime: ${TRIGGER_AUTHENTICATION_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${TRIGGER_AUTHENTICATION_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

pipelineSetupUsageCreationExecutorServiceConfig:
  corePoolSize: ${PIPELINE_SETUP_USAGE_CREATION_EXECUTOR_POOL_CORE_SIZE:-1}
  maxPoolSize: ${PIPELINE_SETUP_USAGE_CREATION_EXECUTOR_POOL_MAX_SIZE:-10}
  idleTime: ${PIPELINE_SETUP_USAGE_CREATION_EXECUTOR_POOL_IDLE_TIME:-30}
  timeUnit: ${PIPELINE_SETUP_USAGE_CREATION_EXECUTOR_POOL_IDLE_TIME_TIME_UNIT:-SECONDS}

expandedJsonConfig:
  lockTimeOutInMinutes: 2

staticSchemaFileURL: ${STATIC_SCHEMA_FILE_URL:-"https://raw.githubusercontent.com/harness/harness-schema/main/%s/%s"}
timeoutIteratorMode : ${TIMEOUT_ITERATOR_MODE:-LOOP}

webhookEventHsqsDequeueConfig:
  batchSize: ${WEBHOOK_EVENT_DEQUE_BATCH_SIZE:-20}
  threadSleepTimeInMillis: ${WEBHOOK_EVENT_DEQUE_THREAD_SLEEP_TIME_IN_MILLIS:-30}

useQueueServiceForWebhookTriggers: ${USE_QUEUE_SERVICE_FOR_WEBHOOK_TRIGGERS:-false}

graphConsumerSleepIntervalMs: ${GRAPH_CONSUMER_SLEEP_INTERVAL_MS:-0}

asyncFilterCreationConsumerSleepIntervalMs: ${ASYNC_FILTER_CREATION_CONSUMER_SLEEP_INTERVAL_MS:-5000}

streamPerServiceConfiguration: ${PIE_STREAM_PER_SERVICE:- false}

publishAdviserEventForCustomAdvisers: ${PUBLISH_ADVISER_EVENT_FOR_CUSTOM_ADVISERS:-true}

disableCustomStageInPipelineService: ${DISABLE_CUSTOM_STAGE_IN_PIPELINE_SERVICE:-false}