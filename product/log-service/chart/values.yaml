# Default values for log-service
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  commonAnnotations: {}
  commonLabels: {}
  kubeVersion: ""
  loadbalancerURL: ""
  ingress:
    enabled: false
    className: harness
    hosts:
      - my-host.example.org
    tls:
      enabled: true
      secretName: ''
    objects:
      annotations: {}
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways: []
      hosts: []
  imagePullSecrets: []
  database:
    minio:
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              S3_USER: ""
              S3_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                S3_USER:
                  name: ""
                  property: ""
                S3_PASSWORD:
                  name: ""
                  property: ""
    redis:
      installed: false
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis-sentinel-harness-announce-0:26379
        - redis-sentinel-harness-announce-1:26379
        - redis-sentinel-harness-announce-2:26379
      secretName: "redis-secret"
      userKey: "redis-user"
      passwordKey: "redis-password"
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
s3:
  ### Default values are configured to work with Minio, override if you are using own s3 buckets
  endpoint: ""
  bucketName: "logs"
  region: "us-east-1"
  accessKeyId: ""
  secretAccessKey: ""
#redis:
#  disableWatcher: false
replicaCount: 1
maxSurge: 1
maxUnavailable: 0

redis:
  disableWatcher: false
  protocol: ""
  hosts: []
  secretName: ""
  userKey: ""
  passwordKey: ""
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            REDIS_USERNAME:
              name: ""
              property: ""
            REDIS_PASSWORD:
              name: ""
              property: ""

image:
  registry: docker.io
  repository: harness/log-service-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "release-128-ubi"
  digest: ""
  imagePullSecrets: []

logServiceS3AccessKeyID:
  name: minio
  key: root-user

logServiceS3SecretAccessKey:
  name: minio
  key: root-password

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

imagePullSecrets: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true

resources:
  limits:
    memory: 3072Mi
  requests:
    cpu: 1
    memory: 3072Mi

service:
  type: ClusterIP
  port: 8079
  annotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

additionalConfigs: {}

# extraVolumes:
# - name: volume-test
#   configMap:
#     name: test-config
#     readOnly: true
extraVolumes: []

# extraVolumeMounts:
#   - name: test-volume-mount
#     mountPath: /opt/harness/config
extraVolumeMounts: []

# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command:
virtualService:
  annotations: {}
ingress:
  annotations: {}

secrets:
  default:
    LOG_SERVICE_GLOBAL_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
    LOG_SERVICE_SECRET: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
  kubernetesSecrets:
    - secretName: ""
      keys:
        LOG_SERVICE_GLOBAL_TOKEN: ""
        LOG_SERVICE_SECRET: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          LOG_SERVICE_GLOBAL_TOKEN:
            name: ""
            property: ""
          LOG_SERVICE_SECRET:
            name: ""
            property: ""

