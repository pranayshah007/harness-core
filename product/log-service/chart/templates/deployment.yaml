apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "log-service.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      {{- include "log-service.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.maxSurge}}
      maxUnavailable: {{.Values.maxUnavailable}}
  template:
    metadata:
      {{- if or .Values.global.commonAnnotations .Values.podAnnotations }}
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "log-service.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.commonLabels }}
        {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 30
      {{ include "log-service.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "log-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: log-service
        envFrom:
        - configMapRef:
            name: log-service
        env:
          {{- include "harnesscommon.secrets.manageAppEnv" (dict "ctx" $ "variableName" "LOG_SERVICE_GLOBAL_TOKEN" "defaultKubernetesSecretName" "log-service" "defaultKubernetesSecretKey" "LOG_SERVICE_GLOBAL_TOKEN") | indent 10 }}
          {{- include "harnesscommon.secrets.manageAppEnv" (dict "ctx" $ "variableName" "LOG_SERVICE_SECRET" "defaultKubernetesSecretName" "log-service" "defaultKubernetesSecretKey" "LOG_SERVICE_SECRET") | indent 10 }}
          {{- $globalMinioESOSecretIdentifier := include "harnesscommon.secrets.globalESOSecretCtxIdentifier" (dict "ctx" $ "ctxIdentifier" "minio") }}
          {{- include "harnesscommon.secrets.manageEnv" (dict "ctx" $ "variableName" "S3_USER" "overrideEnvName" "LOG_SERVICE_S3_ACCESS_KEY_ID" "providedSecretValues" (list "s3.accessKeyId")  "defaultKubernetesSecretName" .Values.logServiceS3AccessKeyID.name "defaultKubernetesSecretKey" .Values.logServiceS3AccessKeyID.key "extKubernetesSecretCtxs" (list .Values.global.database.minio.secrets.kubernetesSecrets) "esoSecretCtxs" (list (dict "secretCtxIdentifier" $globalMinioESOSecretIdentifier "secretCtx" .Values.global.database.minio.secrets.secretManagement.externalSecretsOperator))) | indent 10 }}
          {{- include "harnesscommon.secrets.manageEnv" (dict "ctx" $ "variableName" "S3_PASSWORD" "overrideEnvName" "LOG_SERVICE_S3_SECRET_ACCESS_KEY" "providedSecretValues" (list "s3.secretAccessKey") "defaultKubernetesSecretName" .Values.logServiceS3SecretAccessKey.name "defaultKubernetesSecretKey" .Values.logServiceS3SecretAccessKey.key "extKubernetesSecretCtxs" (list .Values.global.database.minio.secrets.kubernetesSecrets) "esoSecretCtxs" (list (dict "secretCtxIdentifier" $globalMinioESOSecretIdentifier "secretCtx" .Values.global.database.minio.secrets.secretManagement.externalSecretsOperator))) | indent 10 }}
          {{- include "harnesscommon.dbconnectionv2.redisEnv" (dict "ctx" $ "userVariableName" "LOG_SERVICE_REDIS_USERNAME" "passwordVariableName" "LOG_SERVICE_REDIS_PASSWORD") | indent 10 }}
          - name: LOG_SERVICE_REDIS_DISABLE_EXPIRY_WATCHER
            value: {{ .Values.redis.disableWatcher | quote }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-log-svc
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-log-svc
          initialDelaySeconds: 10
          periodSeconds: 10
        image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        ports:
        - name: http-log-svc
          containerPort: {{ .Values.service.port }}
          protocol: "TCP"
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.lifecycleHooks }}
        lifecycle: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.extraVolumeMounts }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
        {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - log-service
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
      {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
      {{- end }}
