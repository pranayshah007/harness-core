# Default values for ci-manager
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  commonAnnotations: {}
  commonLabels: {}
  loadbalancerURL: ""
  airgap: false
  imagePullSecrets: []
  stackDriverLoggingEnabled: false
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      # --  provide default values if mongo.installed is set to false
      hosts:
        - timescaledb-single-chart:5432
      # -- Enable TimescaleDB SSL
      sslEnabled: false        
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      certName: ""
      certKey: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              TIMESCALEDB_USERNAME: ""
              TIMESCALEDB_PASSWORD: ""
              TIMESCALEDB_SSL_ROOT_CERT: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                TIMESCALEDB_USERNAME:
                  name: ""
                  property: ""
                TIMESCALEDB_PASSWORD:
                  name: ""
                  property: ""
                TIMESCALEDB_SSL_ROOT_CERT:
                  name: ""
                  property: ""
    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
 
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement: 
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
  ingress:
    # -- create ingress objects
    enabled: false
    # -- set ingress object classname
    className: harness
    # -- set host of ingressObjects
    hosts:
      - my-host.example.org
    # -- set tls for ingress objects
    tls:
      enabled: true
      secretName: ''
    # -- add annotations to ingress objects
    objects:
      annotations: { }
  istio:
    # -- create virtualServices objects
    enabled: false
    # -- create gateway and use in virtualservice
    gateway:
      create: false
    # -- if gateway not created, use specified gateway and host
    virtualService:
      gateways:
      hosts:
  ssca: 
    enabled: false
enableAuth: true
replicaCount: 1
maxSurge: 1
maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/ci-manager-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "5302"
  digest: ""
  imagePullSecrets: []
securityImage:
  image:
    registry: docker.io
    repository: harness/sto-plugin
    tag: 1.21.0
    digest: ""
    imagePullSecrets: []
waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []
ci_images:
  addon:
    image:
      registry: docker.io
      digest: ""
      tag: "1.16.26"
      repository: harness/ci-addon
      imagePullSecrets: []
  lite_engine:
    image:
      registry: docker.io
      digest: ""
      tag: "1.16.26"
      repository: harness/ci-lite-engine
      imagePullSecrets: []
  git_clone:
    image:
      registry: docker.io
      digest: ""
      tag: "1.3.4-rootless"
      repository: harness/drone-git
      imagePullSecrets: []
  kaniko:
    image:
      registry: docker.io
      digest: ""
      tag: "1.8.0"
      repository: plugins/kaniko
      imagePullSecrets: []
  kaniko_ecr:
    image:
      registry: docker.io
      digest: ""
      tag: "1.8.0"
      repository: plugins/kaniko-ecr
      imagePullSecrets: []
  kaniko_gcr:
    image:
      registry: docker.io
      digest: ""
      tag: "1.8.0"
      repository: plugins/kaniko-gcr
      imagePullSecrets: []
  kaniko_acr:
    image:
      registry: docker.io
      digest: ""
      tag: "1.8.0"
      repository: plugins/kaniko-acr
      imagePullSecrets: []
  gcs_upload:
    image:
      registry: docker.io
      digest: ""
      tag: "1.5.0"
      repository: plugins/gcs
      imagePullSecrets: []
  s3_upload:
    image:
      registry: docker.io
      digest: ""
      tag: "1.2.7"
      repository: plugins/s3
      imagePullSecrets: []
  artifactory_upload:
    image:
      registry: docker.io
      digest: ""
      tag: "1.4.7"
      repository: plugins/artifactory
      imagePullSecrets: []
  gcs_cache:
    image:
      registry: docker.io
      digest: ""
      tag: "1.6.2"
      repository: plugins/cache
      imagePullSecrets: []
  s3_cache:
    image:
      registry: docker.io
      digest: ""
      tag: "1.6.2"
      repository: plugins/cache
      imagePullSecrets: []
  ssca_plugin:
    image:
      registry: docker.io
      digest: ""
      tag: "0.12.2"
      repository: harness/ssca-plugin
      imagePullSecrets: []
  slsa_plugin:
    image:
      registry: docker.io
      digest: ""
      tag: "0.12.0"
      repository: harness/slsa-plugin
      imagePullSecrets: []
stoServiceGlobalToken:
  name: harness-secrets
  key: stoAppHarnessToken
mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password
timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword
java:
  memory: 4096m
appLogLevel: INFO
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000


redis:
  protocol: ""
  hosts: []
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
    secretManagement: 
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            REDIS_USERNAME:
              name: ""
              property: ""
            REDIS_PASSWORD:
              name: ""
              property: ""
timescaledb:
  # -- TimescaleDB host names
  hosts: []
  # -- Enable TimescaleDB SSL
  # sslEnabled: false
  # -- TimescaleDB secrets
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          TIMESCALEDB_USERNAME: ""
          TIMESCALEDB_PASSWORD: ""
          TIMESCALEDB_SSL_ROOT_CERT: ""
    secretManagement: 
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            TIMESCALEDB_USERNAME:
              name: ""
              property: ""
            TIMESCALEDB_PASSWORD:
              name: ""
              property: ""
            TIMESCALEDB_SSL_ROOT_CERT:
              name: ""
              property: ""
mongo:
  protocol: ""
  hosts: []
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          MONGO_USER: ""
          MONGO_PASSWORD: ""
    secretManagement: 
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            MONGO_USER:
              name: ""
              property: ""
            MONGO_PASSWORD:
              name: ""
              property: ""                            

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  annotations: {}
  type: ClusterIP
  port: 7090
  grpcport: 9979
resources:
  limits:
    memory: 8192Mi
  requests:
    cpu: 1
    memory: 1400Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
additionalConfigs: {}
java17flags: ""

virtualService:
  annotations: {}
ingress:
  annotations: {}

secrets:
  default:
    LOG_SERVICE_GLOBAL_TOKEN: "Yzc2ZTU2N2EtYjM0MS00MDRkLWE4ZGQtZDk3Mzg3MTRlYjgyCg=="
    TI_SERVICE_GLOBAL_TOKEN: "59MR5RlVARcdH7zb7pNx6GzqiglBmXR8"
  kubernetesSecrets:
  - secretName: ""
    keys:
      LOG_STREAMING_SERVICE_TOKEN: ""
      VERIFICATION_SERVICE_SECRET: ""
  secretManagement: 
    externalSecretsOperator:
    - secretStore:
        name: ""
        kind: ""
      remoteKeys:
        LOG_STREAMING_SERVICE_TOKEN:
          name: ""
          property: ""
        VERIFICATION_SERVICE_SECRET:
          name: ""
          property: "" 
